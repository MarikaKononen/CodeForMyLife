steps:
# GITHUB KEY
- name: 'gcr.io/cloud-builders/gcloud'
  id: 'github-key'
  args:
  - kms
  - decrypt
  - --ciphertext-file=gcloud/id_rsa_stage.enc
  - --plaintext-file=/root/.ssh/id_rsa
  - --location=global
  - --keyring=infra
  - --key=github-key
  volumes:
  - name: 'ssh'
    path: /root/.ssh

# Decrypt .npmrc
- name: 'gcr.io/cloud-builders/gcloud'
  id: 'decrypt'
  args:
  - kms
  - decrypt
  - --ciphertext-file=gcloud/.npmrc_stage.enc
  - --plaintext-file=web/app/themes/THEMENAME/.npmrc
  - --location=global
  - --keyring=infra
  - --key=github-key

# GITHUB TO KNOWN_HOSTS
- name: 'gcr.io/cloud-builders/git'
  id: 'known-hosts'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    chmod 600 /root/.ssh/id_rsa
    cat <<EOF >/root/.ssh/config
    Hostname github.com
    IdentityFile /root/.ssh/id_rsa
    EOF
    mv gcloud/known_hosts /root/.ssh/known_hosts
    openssl req -new -newkey rsa:1024 -sha256 -days 7300 -nodes -x509 -subj "/CN=asiakas.test" -keyout nginx/environments/testing/http/default.key -out nginx/environments/testing/http/default.crt
  volumes:
  - name: 'ssh'
    path: /root/.ssh

# COMPOSER
- name: 'devgeniem/composer-prestissimo'
  id: 'composer'
  waitFor: [ 'github-key', 'known-hosts', 'decrypt' ]
  args: [ 'install', '--no-interaction', '--ignore-platform-reqs', '--no-suggest', '--no-progress', '--optimize-autoloader' ]
  volumes:
  - name: 'ssh'
    path: /root/.ssh

# PHPCS (uncomment if the tests should pass)
#- name: 'composer'
#  entrypoint: 'bash'
#  args:
#  - '-c'
#  - |
#    composer create-project wp-coding-standards/wpcs --no-dev /opt/wpcs
#    composer global require phpunit/phpunit
#    /opt/wpcs/vendor/bin/phpcs --config-set installed_paths /opt/wpcs
#    /opt/wpcs/vendor/bin/phpcs --extensions=php --standard=phpcs.xml --runtime-set ignore_warnings_on_exit true .

# WEBPACK
- name: 'gcr.io/cloud-builders/npm'
  id: 'npm'
  waitFor: [ 'github-key', 'known-hosts', 'decrypt' ]
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    cd ./web/app/themes/THEMENAME
    npm ci
    npm run build

# OPTIONAL DB SEED
- name: gcr.io/cloud-builders/gsutil
  id: 'db-seed'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    gsutil cp gs://ci-build-stage/client-asiakas.sql seed.sql || exit 0

# INTEGRATION TESTS
- name: 'docker/compose:1.15.0'
  id: 'integration-tests'
  args: ['-f', 'docker-compose-gcloud.yml', 'run', 'web', '/bin/bash', '-c', './scripts/seed.sh; ./vendor/bin/codecept run --steps']

# BUILD AND PUSH IMAGE
- name: 'gcr.io/cloud-builders/docker'
  id: 'docker-build'
  args: [ 'build', '--pull', '-t', 'gcr.io/$PROJECT_ID/PROJECTNAME:stage', '.' ]
- name: 'gcr.io/cloud-builders/docker'
  id: 'docker-push'
  args: [ 'push', 'gcr.io/$PROJECT_ID/PROJECTNAME:stage' ]

# UPGRADE KONTENA STACK
- name: 'kontena/cli'
  id: 'kontena-upgrade'
  args: [ 'stack', 'upgrade', 'PROJECTNAME', 'kontena-stage.yml' ]
  env: [ 'KONTENA_GRID=stage', 'KONTENA_URL=https://kontena-master-stage.geniem.com' ]
  secretEnv: [ 'KONTENA_TOKEN' ]

secrets:
- kmsKeyName: 'projects/geniem-stage/locations/global/keyRings/infra/cryptoKeys/kontena-key'
  secretEnv:
    # encryted access token to kontena
    KONTENA_TOKEN: CiQA4j4haRTCAuU1Klk0GBbPucq2JjVzH1CMMUH+WluMy5N93XkSaQDqV+JInB3iIVhb/6L1fuX4MNzyZehyotAHrYQZHqykjDW5kdM7ndH70WdnjhlPMuPUczlP1qQ7K2s5A1gaPXfQnqC1/ILiu2DO0w0WTrGfjzXabAMxNTEoX1Q252vU7PdSsvUmvziyzg==
options:
  machineType: 'N1_HIGHCPU_8'
timeout: 1200s
