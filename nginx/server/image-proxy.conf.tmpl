### This file is appended into nginx server {} block
### It contains any nginx customisations needed for this site
### Those may include eg. custom headers or redirects

##
# Proxy all uploads from Google bucket and allow ngx_pagespeed to optimize them
##
location ~ ^/uploads/ {
  # Disable basic auth for uploads.
  auth_basic off;
  allow all;

  rewrite ^/[^\/]+(/.*)$ $1 break;
  # The hostname contains the bucket name
  proxy_set_header        Host storage.googleapis.com;
  proxy_set_header        Accept-Encoding "";
  proxy_hide_header       Set-Cookie;
  proxy_ignore_headers    "Set-Cookie";
  proxy_http_version      1.1;

  # Hide s3 bucket extra headers
  proxy_hide_header    x-goog-generation;
  proxy_hide_header    x-goog-hash;
  proxy_hide_header    x-goog-hash;
  proxy_hide_header    x-goog-meta-file-hash;
  proxy_hide_header    x-goog-meta-height;
  proxy_hide_header    x-goog-meta-object-id;
  proxy_hide_header    x-goog-meta-source-id;
  proxy_hide_header    x-goog-meta-width;
  proxy_hide_header    x-goog-metageneration;
  proxy_hide_header    x-goog-storage-class;
  proxy_hide_header    x-goog-stored-content-encoding;
  proxy_hide_header    x-goog-stored-content-length;
  proxy_hide_header    x-guploader-uploadid;
  proxy_hide_header    Authorization;

  proxy_buffering         off;
  proxy_intercept_errors  on;

  # Use proxy cache
  proxy_cache google_cache;
  proxy_cache_lock on;
  proxy_cache_key "$uri"; # Ignore Parameters
  proxy_cache_bypass     $http_cache_purge;

  # https://github.com/FRiCKLE/ngx_cache_purge
  proxy_cache_purge on from 127.0.0.1;
  # Limit Request Methods to GET|HEAD|PURGE
  if ( $request_method !~ "GET|HEAD|PURGE" ) {
      return 405;
  }

  # Set long cache headers
  expires     max;
  add_header  X-Cache $upstream_cache_status;

  # Allow pagespeed to optimize images from this cache
  #pagespeed AllowVaryOn Auto;

  # Resolve domain name to google bucket
  #resolver               8.8.8.8 valid=300s;
  resolver 8.8.8.8 ipv6=off valid=300s;
  resolver_timeout       10s;

  # Cache files for one week, cache 404 files for a moment to reduce DDOS just a little bit
  proxy_cache_valid 200 168h;
  proxy_cache_valid 404 10s;

  # Try next upstream if the main upstream is down
  # proxy_next_upstream error timeout http_404;

  proxy_pass https://google_bucket/${GOOGLE_CLOUD_STORAGE_BUCKET_NAME}$uri;
}